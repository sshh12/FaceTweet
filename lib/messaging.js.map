{"version":3,"sources":["../public/scripts/messaging.js"],"names":["window","friendlyPix","Messaging","database","firebase","auth","storage","messaging","$","document","ready","enableNotificationsContainer","enableNotificationsCheckbox","enableNotificationsLabel","toast","change","onEnableNotificationsChange","onAuthStateChanged","trackNotificationsEnabledStatus","onTokenRefresh","saveToken","onMessage","payload","getToken","then","currentToken","saveNotificationToken","console","log","requestPermission","catch","error","err","notification","userId","click_action","split","data","message","body","actionHandler","page","actionText","timeout","MaterialSnackbar","showSnackbar","checked","prop","toggleNotificationEnabled","currentUser","registerToNotificationEnabledStatusUpdate","val","text","MaterialUtils","refreshSwitchState"],"mappings":"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","file":"messaging.js","sourcesContent":["/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n'use strict';\n\nwindow.friendlyPix = window.friendlyPix || {};\n\n/**\n * Handles notifications.\n */\nfriendlyPix.Messaging = class {\n\n  /**\n   * Inititializes the notifications utility.\n   * @constructor\n   */\n  constructor() {\n    // Firebase SDK\n    this.database = firebase.database();\n    this.auth = firebase.auth();\n    this.storage = firebase.storage();\n    this.messaging = firebase.messaging();\n\n    $(document).ready(() => {\n      // DOM Elements\n      this.enableNotificationsContainer = $('.fp-notifications');\n      this.enableNotificationsCheckbox = $('#notifications');\n      this.enableNotificationsLabel = $('.mdl-switch__label', this.enableNotificationsContainer);\n\n      this.toast = $('.mdl-js-snackbar');\n\n      // Event bindings\n      this.enableNotificationsCheckbox.change(() => this.onEnableNotificationsChange());\n      this.auth.onAuthStateChanged(() => this.trackNotificationsEnabledStatus());\n      this.messaging.onTokenRefresh(() => this.saveToken());\n      this.messaging.onMessage(payload => this.onMessage(payload));\n    });\n  }\n\n  /**\n   * Saves the token to the database if available. If not request permissions.\n   */\n  saveToken() {\n    this.messaging.getToken().then(currentToken => {\n      if (currentToken) {\n        friendlyPix.firebase.saveNotificationToken(currentToken).then(() => {\n          console.log('Notification Token saved to database');\n        });\n      } else {\n        this.requestPermission();\n      }\n    }).catch(err => {\n      console.error('Unable to get messaging token.', err);\n    });\n  }\n\n  /**\n   * Requests permission to send notifications on this browser.\n   */\n  requestPermission() {\n    console.log('Requesting permission...');\n    this.messaging.requestPermission().then(() => {\n      console.log('Notification permission granted.');\n      this.saveToken();\n    }).catch(err => {\n      console.error('Unable to get permission to notify.', err);\n    });\n  }\n\n  /**\n   * Called when the app is in focus.\n   */\n  onMessage(payload) {\n    console.log('Notifications received.', payload);\n\n    // If we get a notification while focus on the app\n    if (payload.notification) {\n      const userId = payload.notification.click_action.split('/user/')[1];\n\n      let data = {\n        message: payload.notification.body,\n        actionHandler: () => page(`/user/${userId}`),\n        actionText: 'Profile',\n        timeout: 10000\n      };\n      this.toast[0].MaterialSnackbar.showSnackbar(data);\n    }\n  }\n\n  /**\n   * Triggered when the user changes the \"Notifications Enabled\" checkbox.\n   */\n  onEnableNotificationsChange() {\n    const checked = this.enableNotificationsCheckbox.prop('checked');\n    this.enableNotificationsCheckbox.prop('disabled', true);\n\n    return friendlyPix.firebase.toggleNotificationEnabled(checked);\n  }\n\n  /**\n   * Starts tracking the \"Notifications Enabled\" checkbox status.\n   */\n  trackNotificationsEnabledStatus() {\n    if (this.auth.currentUser) {\n      friendlyPix.firebase.registerToNotificationEnabledStatusUpdate(data => {\n        this.enableNotificationsCheckbox.prop('checked', data.val() !== null);\n        this.enableNotificationsCheckbox.prop('disabled', false);\n        this.enableNotificationsLabel.text(data.val() ? 'Notifications Enabled' : 'Enable Notifications');\n        friendlyPix.MaterialUtils.refreshSwitchState(this.enableNotificationsContainer);\n\n        if (data.val()) {\n          this.saveToken();\n        }\n      });\n    }\n  }\n};\n\nfriendlyPix.messaging = new friendlyPix.Messaging();\n"]}